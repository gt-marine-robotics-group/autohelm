/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_STATUS_PB_H_INCLUDED
#define PB_STATUS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Status {
    int32_t state;
} Status;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Status_init_default                      {0}
#define Status_init_zero                         {0}

/* Field tags (for use in manual encoding/decoding) */
#define Status_state_tag                         1

/* Struct field encoding specification for nanopb */
#define Status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    state,             1)
#define Status_CALLBACK NULL
#define Status_DEFAULT NULL

extern const pb_msgdesc_t Status_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Status_fields &Status_msg

/* Maximum encoded size of messages (where known) */
#define STATUS_PB_H_MAX_SIZE                     Status_size
#define Status_size                              11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
